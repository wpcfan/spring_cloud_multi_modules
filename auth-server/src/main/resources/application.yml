spring:
  application:
    name: auth-server
  cache:
    type: caffeine
  datasource:
    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:
  flyway:
    enabled: false
  data:
    redis:
      url: ${REDIS_URL:redis://localhost:6379}
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    open-in-view: false
  h2:
    console:
      enabled: false
  profiles:
    active: dev
  security:
    oauth2:
      client:
        registration:
          google-idp:
            provider: google
            client-id: ${GOOGLE_CLIENT_ID:google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:google-client-secret}
            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
            client-name: Sign in with Google
          github-idp:
            provider: github
            client-id: ${GITHUB_CLIENT_ID:github-client-id}
            client-secret: ${GITHUB_CLIENT_SECRET:github-client-secret}
            scope: user:email, read:user
            client-name: Sign in with GitHub
        provider:
          google:
            user-name-attribute: email
          github:
            user-name-attribute: login
management:
  endpoints:
    web:
      exposure:
        include: "*"  #<2>
  endpoint:
    health:
      show-details: ALWAYS
logging:
  level:
    root: off
    org:
      springframework: info
      hibernate: info
      apache:
        commons: info
    com:
        twigcodes: debug
app:
  sms:
    provider: ali
    access-key-id: ${SMS_ACCESS_KEY_ID}
    access-key-secret: ${SMS_ACCESS_KEY_SECRET}
    endpoint: ${SMS_ENDPOINT}
    sign-name: ${SMS_SIGN_NAME}
    template-code: ${SMS_TEMPLATE_CODE}
server:
  address: 0.0.0.0
  port: 9999
